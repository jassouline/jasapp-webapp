name: Jasapp-webapp CI/CD

on:
  push:
    paths:
      - '**/*.py'
      - '**/static/**'
      - 'Dockerfile'
      - '.dockerignore'
      - 'requirements.txt'
      - '.github/workflows/**'

jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install -r requirements.txt

      - name: Run flake8
        run: flake8 --max-line-length=220 --extend-exclude=*.pyc,*__init__.py,./venv/*, ./

  docker-lint:
    needs: [flake8]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jasapp
          pip install -r requirements.txt

      - name: Run jasapp
        run: jasapp --type dockerfile --score Dockerfile

  docker-build:
    needs: [docker-lint]
    runs-on: ubuntu-latest
    env:
      TEST_IMAGE: ${{ secrets.DOCKER_HUB_REGISTRY_USER }}/jasapp-webapp:${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.TEST_IMAGE }}

  docker-test:
    runs-on: ubuntu-latest
    needs: [docker-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run webapp and check response
        run: |
          docker run -d -p 8000:8000 --name jasapp-webapp-container jassouline/jasapp-webapp:${{ github.ref_name }}
          sleep 5  # Attendre que le conteneur d√©marre
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000)
          docker stop jasapp-webapp-container
          if [[ "$response" -ne 200 ]]; then
            echo "Webapp did not return 200 OK. Response code: $response"
            exit 1
          fi

  docker-release:
    needs: [docker-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only run on push to main branch
    env:
      TEST_IMAGE: ${{ secrets.DOCKER_HUB_REGISTRY_USER }}/jasapp-webapp:${{ github.ref_name }}
      RELEASE_IMAGE: ${{ secrets.DOCKER_HUB_REGISTRY_USER }}/jasapp-webapp:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Pull test image
        run: docker pull ${{ env.TEST_IMAGE }}

      - name: Tag test image as release image
        run: docker tag ${{ env.TEST_IMAGE }} ${{ env.RELEASE_IMAGE }}

      - name: Push release image
        run: docker push ${{ env.RELEASE_IMAGE }}
